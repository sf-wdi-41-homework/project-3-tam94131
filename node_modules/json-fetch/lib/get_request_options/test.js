'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

require('goodeggs-test-helpers');

var _mocha = require('mocha');

var _chai = require('goodeggs-test-helpers/chai');

var _ = require('.');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.describe)('getRequestOptions', (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
  return _regenerator2.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          (0, _mocha.it)('populates an options object without undefined keys', function () {
            var expected = {
              credentials: 'include',
              headers: {
                Accept: 'application/json'
              }
            };
            var actual = (0, _2.default)({});
            (0, _chai.expect)(actual).to.deep.equal(expected);
          });

          (0, _mocha.it)('sets content type header only when there is a body', function () {
            var expected = {
              credentials: 'include',
              headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
              },
              body: '{"hi":"hello"}'
            };
            var actual = (0, _2.default)({ body: { hi: 'hello' } });
            (0, _chai.expect)(actual).to.deep.equal(expected);
          });

        case 2:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, this);
})));